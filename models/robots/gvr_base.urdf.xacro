<?xml version="1.0"?>

<robot 
    xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#xacro"
    xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface">
    
    <xacro:include filename="$(find gvrbot_simulation)/models/robots/inertial_tensors.urdf.xacro" />
    <xacro:include filename="$(find gvrbot_simulation)/models/robots/tracked_wheel.urdf.xacro" />
    
    <!-- Properties (Constants) -->
    <xacro:property name="M_PI" value="3.14159"/>    
    <xacro:property name="base_size_y" value="0.41" /> <!-- Based measured outer dimensions of robot -->
    <xacro:property name="base_size_x" value="0.68" /> <!-- Based measured outer dimensions of robot -->
    <xacro:property name="base_size_z" value="0.16" /> <!-- Based measured outer dimensions of robot -->
    <xacro:property name="base_mass" value="16.92" /> <!-- GvrBot with 4 batteries weighs 39.5 lbs or 17.917 kgs minus 1kg for wheels-->    
    <xacro:property name="wheel_radius_big" value="0.085" />
    <xacro:property name="wheel_size_y" value="0.07" />
    <xacro:property name="wheel_mass" value="0.1" />
    
    <xacro:macro name="gvr_base_macro">
        <link name="base_link">
            <inertial>
                <mass value="${base_mass}" />
                <origin xyz="0.1 0.0 0.0" rpy="0 0 0" /> <!-- Center of mass on x axis is 10cm in front of the origin -->
                <cuboid_tensor mass="${base_mass}" len_x="${base_size_x}" len_y="${base_size_y}" len_z="${base_size_z}" />
            </inertial>
            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 1.5708" />
                <geometry>
                    <mesh filename="package://gvrbot_simulation/models/meshes/base_linkV4.dae"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 -0.0085" rpy="0 0 0" />
                <geometry>
                    <!--  <mesh filename="package://gvrbot_simulation/models/meshes/base_linkV4.dae"/> -->
                    <box size="${base_size_x} ${base_size_y-0.08} ${base_size_z-0.075}"/>
                </geometry>
            </collision>
        </link>

        <!-- base_mark is 2cm cube marking the origin of the model and baselink, for use as a reference point -->
        <joint name="bl_to_bm" type="fixed">
          <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0" />
          <parent link="base_link"/>
          <child link="base_mark"/>
        </joint>
        <link name="base_mark"> 
            <inertial>
                <mass value="0.001" />
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <rectangular_prism_tensor mass="${base_mass}" len_x="0.02" len_y="0.02" len_z="0.02" />
            </inertial>
            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
                <geometry>
                    <box size="0.02 0.02 0.02"/>
                </geometry>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0 0 0.0" />
                 <geometry>
                    <box size="0.02 0.02 0.02"/>
                </geometry>
            </collision>
        </link>
  
        <tracked_wheel parent="base_link" prefix="left_0" offset_y=" ${base_size_y / 2 - 0.04}" offset_x=" 0.25100" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>  
        <tracked_wheel parent="base_link" prefix="left_1" offset_y=" ${base_size_y / 2 - 0.04}" offset_x=" 0.10550" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_2" offset_y=" ${base_size_y / 2 - 0.04}" offset_x=" 0.00000" offset_z="-0.001" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>  
        <tracked_wheel parent="base_link" prefix="left_3" offset_y=" ${base_size_y / 2 - 0.04}" offset_x="-0.10550" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="left_4" offset_y=" ${base_size_y / 2 - 0.04}" offset_x="-0.25100" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_0" offset_y="-${base_size_y / 2 - 0.04}" offset_x=" 0.25100" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>  
        <tracked_wheel parent="base_link" prefix="right_1" offset_y="-${base_size_y / 2 - 0.04}" offset_x=" 0.10550" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/> 
        <tracked_wheel parent="base_link" prefix="right_2" offset_y="-${base_size_y / 2 - 0.04}" offset_x=" 0.00000" offset_z="-0.001" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>  
        <tracked_wheel parent="base_link" prefix="right_3" offset_y="-${base_size_y / 2 - 0.04}" offset_x="-0.10550" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>
        <tracked_wheel parent="base_link" prefix="right_4" offset_y="-${base_size_y / 2 - 0.04}" offset_x="-0.25100" offset_z="0" reflect="1" wheel_radius="${wheel_radius_big}" wheel_size_y="${wheel_size_y}" mass="${wheel_mass}"/>        
      <gazebo>
        
      <plugin name="force_based_move_controller" filename="libgazebo_ros_force_based_move.so">
        <commandTopic>/cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <odometryRate>20.0</odometryRate>
        <robotBaseFrame>base_link</robotBaseFrame>
        <yaw_velocity_p_gain>500</yaw_velocity_p_gain>
        <x_velocity_p_gain>3000</x_velocity_p_gain>
        <y_velocity_p_gain>3000</y_velocity_p_gain>
        <publishOdometryTf>1</publishOdometryTf>
      </plugin>
        
        <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>50.0</updateRate>
          <bodyName>base_link</bodyName>
          <topicName>/gvr_bot/ground_truth/state</topicName>
          <gaussianNoise>0.01</gaussianNoise>
          <frameName>world</frameName>
          <xyzOffsets>0 0 0</xyzOffsets>
          <rpyOffsets>0 0 0</rpyOffsets>
        </plugin>

        <plugin name="imu_controller" filename="libhector_gazebo_ros_imu.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>50.0</updateRate>
          <bodyName>base_link</bodyName>
          <topicName>/gvr_bot/imu_quat</topicName>
          <accelDrift>0.0 0.0 0.0</accelDrift>
          <accelGaussianNoise>0.1 0.1 0.1</accelGaussianNoise>
          <rateDrift>0.0 0.0 0.0</rateDrift>
          <rateGaussianNoise>0.05 0.05 0.05</rateGaussianNoise>
          <headingDrift>0.0</headingDrift>
          <headingGaussianNoise>0.05</headingGaussianNoise>
        </plugin>
        <!--   -->
        </gazebo>
        
    </xacro:macro>
</robot>
